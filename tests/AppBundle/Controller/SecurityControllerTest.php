<?php


namespace Tests\AppBundle\Controller;


class SecurityControllerTest extends WebTestCase
{
    use LogTrait, CreateTrait;

    private $client;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->client = static::createClient(array(), array(
            'PHP_AUTH_USER' => 'User',
            'PHP_AUTH_PW'   => 'hihi'
        ));
        $this->loadFixturesForTests();
    }

    public function testLoginCheck()
    {
        $client = static::createClient();

        $client->request('GET', '/login_check'); // Request the route

        $this->assertSame(500, $client->getResponse()->getStatusCode());
    }

    public function testLogout()
    {
        $client = static::createClient();

        // Request the route
        $crawler = $client->request('GET', '/login');

        // Test if it is connected well
        $this->assertSame(200, $client->getResponse()->getStatusCode());

        $form = $crawler->selectButton('Se connecter')->form();

        $form["_username"] = "User";
        $form["_password"] = "hihi";

        $client->submit($form);

        $this->assertTrue($client->getResponse()->isRedirect());
        $crawler = $client->followRedirect();

        $link = $crawler->selectLink('Se dÃ©connecter')->link();

        $client->click($link);

        //Test 1st redirection
        $this->assertTrue($client->getResponse()->isRedirect());
        $client->followRedirect();

        //Test 2nd redirection
        $this->assertTrue($client->getResponse()->isRedirect());
        $crawler = $client->followRedirect();

        //Test if it arrived back on login and well logout
        $this->assertSame(1, $crawler->filter('h1:contains("Login")')->count());
    }

    public function testLogoutCheck()
    {
        $client = static::createClient();

        // Request the route
        $crawler = $client->request('GET', '/login');

        // Test if it is connected well
        $this->assertSame(200, $client->getResponse()->getStatusCode());

        $form = $crawler->selectButton('Se connecter')->form();

        $form["_username"] = "User";
        $form["_password"] = "hihi";

        $client->submit($form);

        $this->assertTrue($client->getResponse()->isRedirect());
        $client->followRedirect();

        $client->request('GET', '/logout');

        //Test 1st redirection
        $this->assertTrue($client->getResponse()->isRedirect());
        $client->followRedirect();

        //Test 2nd redirection
        $this->assertTrue($client->getResponse()->isRedirect());
        $crawler = $client->followRedirect();

        //Test if it arrived back on login and well logout
        $this->assertSame(1, $crawler->filter('h1:contains("Login")')->count());
    }

    /**
     * {@inheritDoc}
     */
    protected function tearDown()
    {
        parent::tearDown();
    }
}